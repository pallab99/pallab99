{
	// Place your c++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Snippet": {
		"prefix": "T",
		"body": [
		  "///Have faith in god.",
		  "#include<bits/stdc++.h>",
		  "using namespace std;",
		  "using ll  = long long int;",
		  "using vll = vector<ll>;",
		  "using vii = vector<int>;",
		  "using pll = pair<ll, ll>;",
		  "using pii = pair<int, int>;",
		  "using ull = unsigned long long int;",
		  "//=============Typedefines=============//",
		  "#define        nn           \"\\n\"",
		  "#define        F            first",
		  "#define        S            second",
		  "#define        pi           acos(-1.0)",
		  "#define        inf          1<<30 //2^30",
		  "#define        no           cout<<\"NO\"<<nn;",
		  "#define        yes          cout<<\"YES\"<<nn;",
		  "#define        all(x)       (x).begin(),(x).end()",
		  "#define        test         int t, tc; cin>>t; for( tc = 1;tc <= t ; tc++)",
		  "#define        deb(a)       cerr<<\"Line \"<<__LINE__<<\" # \"<<#a<<\" -> \"<<a<<nn;",
		  "#define        _00_         ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);",
		  "//=============Functions===============//",
		  "ll To_int(string str) {stringstream ss(str); ll x = 0; ss >> x ; return x ;}",
		  "template<typename T>T gcd(T a, T b) {if (a < 0)return gcd(-a, b); if (b < 0)return gcd(a, -b); return (b == 0) ? a : gcd(b, a % b);}",
		  "template<typename T>T lcm(T a, T b) {if (a < 0)return lcm(-a, b); if (b < 0)return lcm(a, -b); return a * (b / gcd(a, b));}",
		  "void input()",
		  "{",
		  "#ifndef ONLINE_JUDGE",
		  "	freopen(\"input.txt\", \"r\", stdin);",
		  "	freopen(\"output.txt\", \"w\", stdout);",
		  "#endif",
		  "}",
		  "int main()",
		  "{",
		  "	_00_",
		  "	//input();",
		  "	",
		  "	return 0;",
		  "}"
		],
		"description": "Snippet"
	  }
}